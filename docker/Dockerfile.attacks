# Dockerfile for PoT Attack Testing Environment
# Provides isolated environment for safe attack evaluation

FROM pytorch/pytorch:2.0.1-cuda11.7-cudnn8-runtime

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    wget \
    vim \
    build-essential \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip
RUN pip install --upgrade pip

# Install core dependencies
RUN pip install --no-cache-dir \
    numpy>=1.21.0 \
    scipy>=1.7.0 \
    pandas>=1.3.0 \
    scikit-learn>=1.0.0 \
    matplotlib>=3.4.0 \
    seaborn>=0.11.0 \
    tqdm>=4.62.0 \
    pyyaml>=5.4.0 \
    jsonlines>=2.0.0

# Install attack-specific dependencies
RUN pip install --no-cache-dir \
    torchvision>=0.15.0 \
    torchattacks>=3.4.0 \
    foolbox>=3.3.0 \
    adversarial-robustness-toolbox>=1.12.0

# Install visualization dependencies
RUN pip install --no-cache-dir \
    plotly>=5.0.0 \
    dash>=2.0.0 \
    kaleido>=0.2.0

# Install optional dependencies for enhanced features
RUN pip install --no-cache-dir \
    wandb \
    tensorboard \
    pytest \
    pytest-cov \
    black \
    flake8 \
    mypy

# Install CLI dependencies
RUN pip install --no-cache-dir \
    click>=8.0.0 \
    rich>=10.0.0 \
    tabulate>=0.8.0

# Copy PoT attack modules
COPY pot/ /app/pot/
COPY configs/ /app/configs/
COPY scripts/ /app/scripts/

# Copy CLI and utilities
COPY example_benchmarking.py /app/
COPY example_config_usage.py /app/
COPY test_attack_defense_integration.py /app/

# Create directories for results and data
RUN mkdir -p /app/data \
    /app/results \
    /app/checkpoints \
    /app/logs \
    /app/cache

# Set environment variables
ENV PYTHONPATH=/app:$PYTHONPATH
ENV TORCH_HOME=/app/cache
ENV CUDA_VISIBLE_DEVICES=0
ENV OMP_NUM_THREADS=4

# Security: Run as non-root user
RUN useradd -m -u 1000 attacker && \
    chown -R attacker:attacker /app

USER attacker

# Install PoT package in development mode
RUN pip install --user -e /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import pot; print('PoT Attack Module Ready')" || exit 1

# Default command - launch CLI
ENTRYPOINT ["python", "-m", "pot.cli.attack_cli"]
CMD ["--help"]