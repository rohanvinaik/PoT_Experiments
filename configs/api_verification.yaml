# API Verification Configuration
# For testing PoT verification against closed-model APIs

experiment: api_verification

# API endpoint configurations
apis:
  - provider: "openai"
    model_name: "gpt-3.5-turbo"
    api_key: "${OPENAI_API_KEY}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 60
    cost_per_token: 0.0015
    timeout: 30
    
  - provider: "openai" 
    model_name: "gpt-4"
    api_key: "${OPENAI_API_KEY}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 40
    cost_per_token: 0.03
    timeout: 30
    
  - provider: "anthropic"
    model_name: "claude-3-sonnet-20240229"
    api_key: "${ANTHROPIC_API_KEY}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 50
    cost_per_token: 0.015
    timeout: 30
    
  - provider: "anthropic"
    model_name: "claude-3-haiku-20240307"
    api_key: "${ANTHROPIC_API_KEY}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 100
    cost_per_token: 0.00075
    timeout: 30
    
  - provider: "google"
    model_name: "gemini-1.5-pro"
    api_key: "${GOOGLE_AI_API_KEY}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 30
    cost_per_token: 0.01
    timeout: 30
    
  - provider: "mock"
    model_name: "mock-model"
    api_key: "none"
    max_tokens: 100
    temperature: 0.0
    rate_limit_rpm: 1000
    cost_per_token: 0.0
    timeout: 1
    
  - provider: "openai"
    model_name: "gpt-3.5-turbo"
    api_key: "${AZURE_OPENAI_API_KEY}"
    base_url: "${AZURE_OPENAI_ENDPOINT}"
    max_tokens: 512
    temperature: 0.0
    rate_limit_rpm: 60
    cost_per_token: 0.0015
    timeout: 30

# Challenge configuration for API testing
challenges:
  families:
    - family: "lm:templates"
      n: 100
      params:
        templates:
          - "Complete this sentence: {prompt}"
          - "Translate '{text}' to {language}."
          - "Summarize the following: {content}"
          - "Answer this question: {question}"
          - "Write a {type} about {topic}."
          - "Explain the concept of {concept}."
          - "Compare {item1} and {item2}."
          - "List {count} examples of {category}."
          - "Define the term: {term}"
          - "Solve this problem: {problem}"
        slots:
          prompt:
            - "The future of artificial intelligence is"
            - "The most important skill for the 21st century is"
            - "Climate change will require us to"
            - "Democracy works best when"
            - "Innovation happens through"
          text:
            - "Hello, how are you today?"
            - "Thank you for your help."
            - "Good morning, everyone."
            - "See you later!"
            - "Have a great day."
          language:
            - "French"
            - "Spanish"
            - "German"
            - "Italian"
            - "Japanese"
          content:
            - "Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience without being explicitly programmed."
            - "Renewable energy sources like solar and wind power are becoming increasingly cost-effective alternatives to fossil fuels."
            - "Quantum computing leverages quantum mechanical phenomena to process information in fundamentally different ways than classical computers."
          question:
            - "What is the capital of France?"
            - "How does photosynthesis work?"
            - "What are the primary colors?"
            - "Why is the sky blue?"
            - "How do vaccines work?"
          type:
            - "poem"
            - "story"
            - "essay"
            - "song"
            - "recipe"
          topic:
            - "friendship"
            - "technology"
            - "nature"
            - "space exploration"
            - "cooking"
          concept:
            - "machine learning"
            - "democracy"
            - "evolution"
            - "gravity"
            - "market economics"
          item1: ["cats", "books", "coffee", "mountains", "classical music"]
          item2: ["dogs", "movies", "tea", "beaches", "jazz music"]
          count: ["3", "5", "7", "10"]
          category:
            - "programming languages"
            - "musical instruments"
            - "types of trees"
            - "board games"
            - "cooking methods"
          term:
            - "algorithm"
            - "biodiversity"
            - "democracy"
            - "entropy"
            - "paradigm"
          problem:
            - "2x + 5 = 13, solve for x"
            - "What is 15% of 240?"
            - "A train travels 120 miles in 2 hours. What is its speed?"
            - "If a = 3 and b = 4, what is the square root of a² + b²?"

  master_key: "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
  session_nonce: "fedcba9876543210fedcba9876543210"

# Verification parameters
verification:
  similarity_threshold: 0.7
  confidence_threshold: 0.8
  max_errors_percent: 10
  timeout_seconds: 300

# Cost and rate limiting
budget:
  max_cost_usd: 50.0
  warn_cost_usd: 25.0
  emergency_stop_usd: 75.0

rate_limiting:
  default_rpm: 60
  burst_allowance: 10
  backoff_factor: 2.0

# Caching and optimization
caching:
  enabled: true
  ttl_hours: 24
  cache_identical_responses: true
  cache_compression: true

# Compliance and audit
compliance:
  log_all_requests: true
  log_all_responses: true
  encrypt_logs: true
  retention_days: 2555  # 7 years
  audit_trail: true

security:
  api_key_rotation: true
  request_signing: true
  response_verification: true
  secure_storage: true

# Reporting
reporting:
  generate_summary: true
  include_costs: true
  include_performance: true
  include_compliance: true
  export_formats: ["json", "csv", "pdf"]