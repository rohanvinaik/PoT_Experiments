{
  "metadata": {
    "analysis_timestamp": "2025-08-15T18:45:28.493750",
    "root_path": "/Users/rohanvinaik/PoT_Experiments",
    "total_issues": 98,
    "fixable_issues": 98,
    "risk_score": 22.16,
    "affected_modules": 25,
    "analysis_time_seconds": 0
  },
  "statistics": {
    "issues_by_category": {
      "duplicates": {
        "total": 20,
        "subcategories": {
          "semantic_duplicate_function": 1,
          "duplicate_function": 3,
          "semantic_hv_exact": 15,
          "semantic_hv_duplicate": 1
        },
        "severity_distribution": {
          "medium": 2,
          "high": 18
        }
      },
      "missing_symbols": {
        "total": 11,
        "subcategories": {
          "missing_symbol": 11
        },
        "severity_distribution": {
          "medium": 11
        }
      },
      "placeholders": {
        "total": 24,
        "subcategories": {
          "phantom_stub_triage": 10,
          "enhanced_placeholder": 14
        },
        "severity_distribution": {
          "high": 11,
          "critical": 5,
          "medium": 8
        }
      },
      "code_quality": {
        "total": 1,
        "subcategories": {
          "function_coupling_risk": 1
        },
        "severity_distribution": {
          "critical": 1
        }
      },
      "llm_artifacts": {
        "total": 42,
        "subcategories": {
          "llm_filler_sequence": 22,
          "llm_filler_text": 20
        },
        "severity_distribution": {
          "medium": 42
        }
      }
    },
    "top_issue_types": [
      {
        "type": "llm_filler_sequence",
        "count": 22
      },
      {
        "type": "llm_filler_text",
        "count": 20
      },
      {
        "type": "semantic_hv_exact",
        "count": 15
      },
      {
        "type": "enhanced_placeholder",
        "count": 14
      },
      {
        "type": "missing_symbol",
        "count": 11
      },
      {
        "type": "phantom_stub_triage",
        "count": 10
      },
      {
        "type": "duplicate_function",
        "count": 3
      },
      {
        "type": "semantic_duplicate_function",
        "count": 1
      },
      {
        "type": "semantic_hv_duplicate",
        "count": 1
      },
      {
        "type": "function_coupling_risk",
        "count": 1
      }
    ],
    "severity_breakdown": {
      "medium": 63,
      "high": 29,
      "critical": 6
    },
    "fixability_rate": 100.0
  },
  "file_analysis": {
    "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py": {
      "count": 20,
      "severity_sum": 43,
      "types": [
        "duplicate_function",
        "llm_filler_sequence",
        "missing_symbol",
        "llm_filler_text",
        "semantic_hv_exact"
      ],
      "avg_severity": 2.15
    },
    "/Users/rohanvinaik/PoT_Experiments/experimental_report.py": {
      "count": 15,
      "severity_sum": 32,
      "types": [
        "semantic_duplicate_function",
        "llm_filler_sequence",
        "missing_symbol",
        "llm_filler_text",
        "semantic_hv_exact"
      ],
      "avg_severity": 2.1333333333333333
    },
    "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py": {
      "count": 13,
      "severity_sum": 26,
      "types": [
        "llm_filler_sequence",
        "missing_symbol",
        "llm_filler_text"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py": {
      "count": 7,
      "severity_sum": 25,
      "types": [
        "enhanced_placeholder",
        "semantic_hv_exact",
        "phantom_stub_triage"
      ],
      "avg_severity": 3.5714285714285716
    },
    "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py": {
      "count": 5,
      "severity_sum": 11,
      "types": [
        "enhanced_placeholder",
        "semantic_hv_exact",
        "missing_symbol"
      ],
      "avg_severity": 2.2
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py": {
      "count": 5,
      "severity_sum": 21,
      "types": [
        "enhanced_placeholder",
        "phantom_stub_triage"
      ],
      "avg_severity": 4.2
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py": {
      "count": 4,
      "severity_sum": 10,
      "types": [
        "enhanced_placeholder",
        "phantom_stub_triage"
      ],
      "avg_severity": 2.5
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py": {
      "count": 3,
      "severity_sum": 8,
      "types": [
        "enhanced_placeholder",
        "semantic_hv_exact",
        "phantom_stub_triage"
      ],
      "avg_severity": 2.6666666666666665
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/lm/attacks.py": {
      "count": 2,
      "severity_sum": 6,
      "types": [
        "duplicate_function"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py": {
      "count": 2,
      "severity_sum": 6,
      "types": [
        "function_coupling_risk",
        "missing_symbol"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/experimental_results/validation_experiment.py": {
      "count": 2,
      "severity_sum": 4,
      "types": [
        "llm_filler_sequence",
        "missing_symbol"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_attack.py": {
      "count": 2,
      "severity_sum": 4,
      "types": [
        "llm_filler_sequence",
        "missing_symbol"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_generate_reference.py": {
      "count": 2,
      "severity_sum": 5,
      "types": [
        "semantic_hv_exact",
        "missing_symbol"
      ],
      "avg_severity": 2.5
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py": {
      "count": 2,
      "severity_sum": 6,
      "types": [
        "semantic_hv_exact"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py": {
      "count": 2,
      "severity_sum": 5,
      "types": [
        "enhanced_placeholder",
        "phantom_stub_triage"
      ],
      "avg_severity": 2.5
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py": {
      "count": 2,
      "severity_sum": 5,
      "types": [
        "enhanced_placeholder",
        "phantom_stub_triage"
      ],
      "avg_severity": 2.5
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py": {
      "count": 2,
      "severity_sum": 6,
      "types": [
        "enhanced_placeholder"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_grid.py": {
      "count": 1,
      "severity_sum": 2,
      "types": [
        "missing_symbol"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_plots.py": {
      "count": 1,
      "severity_sum": 2,
      "types": [
        "missing_symbol"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_verify.py": {
      "count": 1,
      "severity_sum": 2,
      "types": [
        "missing_symbol"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/core/wrapper_detection.py": {
      "count": 1,
      "severity_sum": 2,
      "types": [
        "semantic_hv_duplicate"
      ],
      "avg_severity": 2.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_provenance_auditor.py": {
      "count": 1,
      "severity_sum": 3,
      "types": [
        "semantic_hv_exact"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py": {
      "count": 1,
      "severity_sum": 3,
      "types": [
        "semantic_hv_exact"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/core/governance.py": {
      "count": 1,
      "severity_sum": 3,
      "types": [
        "enhanced_placeholder"
      ],
      "avg_severity": 3.0
    },
    "/Users/rohanvinaik/PoT_Experiments/pot/security/proof_of_training.py": {
      "count": 1,
      "severity_sum": 2,
      "types": [
        "llm_filler_text"
      ],
      "avg_severity": 2.0
    }
  },
  "module_risk_scores": {
    "/Users/rohanvinaik/PoT_Experiments/experimental_report.py": 38.0,
    "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py": 48.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/lm/attacks.py": 12.0,
    "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py": 13.0,
    "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py": 28.0,
    "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py": 8.0,
    "/Users/rohanvinaik/PoT_Experiments/experimental_results/validation_experiment.py": 6.0,
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_attack.py": 6.0,
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_generate_reference.py": 7.0,
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_grid.py": 4.0,
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_plots.py": 4.0,
    "/Users/rohanvinaik/PoT_Experiments/scripts/run_verify.py": 4.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/core/wrapper_detection.py": 2.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py": 25.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py": 6.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_provenance_auditor.py": 3.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py": 3.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py": 8.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py": 5.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py": 5.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py": 21.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py": 10.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/core/governance.py": 3.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py": 6.0,
    "/Users/rohanvinaik/PoT_Experiments/pot/security/proof_of_training.py": 2.0
  },
  "issues": [
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 110,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P0_SECURITY: FuzzyHasher.generate_hash (Security risk: crypto_primitives)",
      "severity": 5,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:110",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P0_SECURITY",
        "function_name": "generate_hash",
        "class_name": "FuzzyHasher",
        "signature": "(self, data)",
        "risk_factors": [
          "Security risk: crypto_primitives"
        ],
        "suggested_action": "URGENT: Scaffold real implementation with secure defaults",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def generate_hash(self, data):\n    \"\"\"Security-critical function requiring implementation.\"\"\"\n    raise NotImplementedError(\n        f\"Security-critical function {stub.function_name} must be implemented before use\"\n    )",
        "stable_id": "TC_phantom_stub_triage_e6e10de923762a6e_554b2685",
        "content_hash": "e6e10de923762a6e",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 115,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P0_SECURITY: FuzzyHasher.compare (Security risk: crypto_primitives)",
      "severity": 5,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:115",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P0_SECURITY",
        "function_name": "compare",
        "class_name": "FuzzyHasher",
        "signature": "(self, hash1, hash2)",
        "risk_factors": [
          "Security risk: crypto_primitives"
        ],
        "suggested_action": "URGENT: Scaffold real implementation with secure defaults",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def compare(self, hash1, hash2):\n    \"\"\"Security-critical function requiring implementation.\"\"\"\n    raise NotImplementedError(\n        f\"Security-critical function {stub.function_name} must be implemented before use\"\n    )",
        "stable_id": "TC_phantom_stub_triage_ed230e73a3ccd761_45de216f",
        "content_hash": "ed230e73a3ccd761",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py",
      "line": 297,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P0_SECURITY: BlockchainClient.store_hash (Security risk: crypto_primitives)",
      "severity": 5,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:297",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P0_SECURITY",
        "function_name": "store_hash",
        "class_name": "BlockchainClient",
        "signature": "(self, hash_value, metadata)",
        "risk_factors": [
          "Security risk: crypto_primitives"
        ],
        "suggested_action": "URGENT: Scaffold real implementation with secure defaults",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def store_hash(self, hash_value, metadata):\n    \"\"\"Security-critical function requiring implementation.\"\"\"\n    raise NotImplementedError(\n        f\"Security-critical function {stub.function_name} must be implemented before use\"\n    )",
        "stable_id": "TC_phantom_stub_triage_81948786a07011a2_dd60376b",
        "content_hash": "81948786a07011a2",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py",
      "line": 302,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P0_SECURITY: BlockchainClient.retrieve_hash (Security risk: crypto_primitives)",
      "severity": 5,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:302",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P0_SECURITY",
        "function_name": "retrieve_hash",
        "class_name": "BlockchainClient",
        "signature": "(self, transaction_id)",
        "risk_factors": [
          "Security risk: crypto_primitives"
        ],
        "suggested_action": "URGENT: Scaffold real implementation with secure defaults",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def retrieve_hash(self, transaction_id):\n    \"\"\"Security-critical function requiring implementation.\"\"\"\n    raise NotImplementedError(\n        f\"Security-critical function {stub.function_name} must be implemented before use\"\n    )",
        "stable_id": "TC_phantom_stub_triage_d2f1c4ad765af269_855af667",
        "content_hash": "d2f1c4ad765af269",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py",
      "line": 307,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P0_SECURITY: BlockchainClient.verify_hash (Security risk: crypto_verify)",
      "severity": 5,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:307",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P0_SECURITY",
        "function_name": "verify_hash",
        "class_name": "BlockchainClient",
        "signature": "(self, hash_value, transaction_id)",
        "risk_factors": [
          "Security risk: crypto_verify"
        ],
        "suggested_action": "URGENT: Scaffold real implementation with secure defaults",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def verify_hash(self, hash_value, transaction_id):\n    \"\"\"Security-critical verification function - requires implementation.\n    \n    TODO: Implement proper cryptographic verification logic.\n    This scaffolding is provided to prevent silent failures.\n    \"\"\"\n    import warnings\n    warnings.warn(\n        f\"{stub.function_name} is using a stub implementation. \"\n        f\"Do not use in production!\",\n        UserWarning,\n        stacklevel=2\n    )\n    \n    # Scaffold implementation - always returns False for safety\n    return False  # SAFE DEFAULT: Fail closed for security",
        "stable_id": "TC_phantom_stub_triage_f62c295a76703343_2f8128a5",
        "content_hash": "f62c295a76703343",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py",
      "line": 29,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "function_coupling_risk",
      "message": "High coupling risk between MockModel.__init__ and MockModel.forward",
      "severity": 4,
      "confidence": 1.0,
      "suggestions": [
        "Review function_coupling_risk issue at /Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py:29",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "element1": {
          "name": "MockModel.__init__",
          "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py",
          "line": 29,
          "type": "method"
        },
        "element2": {
          "name": "MockModel.forward",
          "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py",
          "line": 31,
          "type": "method"
        },
        "contact_probability": 0.7071067811865475,
        "similarity": 0.43333333333333335,
        "thrash_risk": 0.30641293851417056,
        "polymer_distance": 0.04309999999999999,
        "stable_id": "TC_function_coupling_risk_3fa55041deb7e962_676c5a8b",
        "content_hash": "3fa55041deb7e962",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 57,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "duplicate_function",
      "message": "Exact duplicate: print_section identical to print_section in experimental_report_fixed.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "IMMEDIATE: These functions are structurally identical. Options:\n1. Delete all but one and update imports\n2. If they need different names, use aliasing:\n   ```python\n   # Keep one implementation\n   def original_function(...):\n       ...\n   \n   # Create aliases for other names\n   alternative_name = original_function\n   ```",
        "CHECK: Run this command to find all usages:\n```bash\ngrep -r 'function_name' --include='*.py' .\n```"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:50",
        "function_name": "print_section",
        "duplicate_name": "print_section",
        "similarity": 1.0,
        "match_type": "exact",
        "stable_id": "TC_duplicate_function_b1117bc2791bcc5f_5e5d87f8",
        "content_hash": "b1117bc2791bcc5f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/lm/attacks.py",
      "line": 9,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "duplicate_function",
      "message": "Exact duplicate: limited_distillation identical to limited_distillation in attacks.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "IMMEDIATE: These functions are structurally identical. Options:\n1. Delete all but one and update imports\n2. If they need different names, use aliasing:\n   ```python\n   # Keep one implementation\n   def original_function(...):\n       ...\n   \n   # Create aliases for other names\n   alternative_name = original_function\n   ```",
        "CHECK: Run this command to find all usages:\n```bash\ngrep -r 'function_name' --include='*.py' .\n```"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/vision/attacks.py:12",
        "function_name": "limited_distillation",
        "duplicate_name": "limited_distillation",
        "similarity": 1.0,
        "match_type": "exact",
        "stable_id": "TC_duplicate_function_60e302d4de2a9542_27e5047e",
        "content_hash": "60e302d4de2a9542",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/lm/attacks.py",
      "line": 5,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "duplicate_function",
      "message": "Exact duplicate: targeted_finetune identical to targeted_finetune in attacks.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "IMMEDIATE: These functions are structurally identical. Options:\n1. Delete all but one and update imports\n2. If they need different names, use aliasing:\n   ```python\n   # Keep one implementation\n   def original_function(...):\n       ...\n   \n   # Create aliases for other names\n   alternative_name = original_function\n   ```",
        "CHECK: Run this command to find all usages:\n```bash\ngrep -r 'function_name' --include='*.py' .\n```"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/vision/attacks.py:7",
        "function_name": "targeted_finetune",
        "duplicate_name": "targeted_finetune",
        "similarity": 1.0,
        "match_type": "exact",
        "stable_id": "TC_duplicate_function_ae93b2d048172afe_31c395e8",
        "content_hash": "ae93b2d048172afe",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py",
      "line": 24,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: print_test identical to print_section in experimental_report_final.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py:24",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:57",
        "function_name": "print_test",
        "duplicate_name": "print_section",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_b9783732035ce273_0562099d",
        "content_hash": "b9783732035ce273",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 57,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: print_section identical to print_section in experimental_report_fixed.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:57",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:50",
        "function_name": "print_section",
        "duplicate_name": "print_section",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_f3a1fb041072e4ef_5e5d87f8",
        "content_hash": "f3a1fb041072e4ef",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 34,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: print_header identical to print_header in experimental_report_final.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:34",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:47",
        "function_name": "print_header",
        "duplicate_name": "print_header",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_e21247dad8a79106_b6516422",
        "content_hash": "e21247dad8a79106",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 47,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: print_header identical to print_header in experimental_report_fixed.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:47",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:40",
        "function_name": "print_header",
        "duplicate_name": "print_header",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_10fddb3efce9cf4f_416592b7",
        "content_hash": "10fddb3efce9cf4f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 431,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: generate_summary identical to generate_summary in experimental_report_fixed.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:431",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:617",
        "function_name": "generate_summary",
        "duplicate_name": "generate_summary",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_661c7b0d4de18f9c_bb080039",
        "content_hash": "661c7b0d4de18f9c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 134,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: __init__ identical to __init__ in fuzzy_hash_verifier.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:134",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:152",
        "function_name": "__init__",
        "duplicate_name": "__init__",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_d6c6fbf6e2234c74_b1826cfc",
        "content_hash": "d6c6fbf6e2234c74",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 138,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: generate_hash identical to generate_hash in fuzzy_hash_verifier.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:138",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:185",
        "function_name": "generate_hash",
        "duplicate_name": "generate_hash",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_92f43210feca4f21_94d32c14",
        "content_hash": "92f43210feca4f21",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_semantic_hv_exact_92f43210feca4f21_c3bff17c"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 156,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: generate_hash identical to generate_hash in fuzzy_hash_verifier.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:156",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:185",
        "function_name": "generate_hash",
        "duplicate_name": "generate_hash",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_92f43210feca4f21_c3bff17c",
        "content_hash": "92f43210feca4f21",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_semantic_hv_exact_92f43210feca4f21_94d32c14"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 597,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: __repr__ identical to __repr__ in training_provenance_auditor.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:597",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:974",
        "function_name": "__repr__",
        "duplicate_name": "__repr__",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_81c387277e0262b3_aa0f841d",
        "content_hash": "81c387277e0262b3",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py",
      "line": 17,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: test_basic_verification identical to test_error_handling in test_fuzzy_verifier.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py:17",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py:271",
        "function_name": "test_basic_verification",
        "duplicate_name": "test_error_handling",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_07cd1457a821d67d_302d717f",
        "content_hash": "07cd1457a821d67d",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py",
      "line": 351,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: run_all_tests identical to run_all_tests in test_provenance_auditor.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/test_fuzzy_verifier.py:351",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_provenance_auditor.py:599",
        "function_name": "run_all_tests",
        "duplicate_name": "run_all_tests",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_6ad08e72111caa3b_39a9685e",
        "content_hash": "6ad08e72111caa3b",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_provenance_auditor.py",
      "line": 599,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: run_all_tests identical to run_all_tests in test_token_normalizer.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/test_provenance_auditor.py:599",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py:537",
        "function_name": "run_all_tests",
        "duplicate_name": "run_all_tests",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_0b683d1799598dd9_35f3c4ad",
        "content_hash": "0b683d1799598dd9",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py",
      "line": 222,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: test_deterministic_mode identical to test_semantic_similarity in test_token_normalizer.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py:222",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/security/test_token_normalizer.py:299",
        "function_name": "test_deterministic_mode",
        "duplicate_name": "test_semantic_similarity",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_d583de7144b5bee9_b32bae3d",
        "content_hash": "d583de7144b5bee9",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py",
      "line": 62,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: apply_pruning identical to apply_quantization in models.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/models.py:62",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py:58",
        "function_name": "apply_pruning",
        "duplicate_name": "apply_quantization",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_27c025fc7604a390_b5aa6d07",
        "content_hash": "27c025fc7604a390",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_generate_reference.py",
      "line": 19,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_exact",
      "message": "Exact hypervector match: main identical to main in run_verify.py",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_exact issue at /Users/rohanvinaik/PoT_Experiments/scripts/run_generate_reference.py:19",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/scripts/run_verify.py:24",
        "function_name": "main",
        "duplicate_name": "main",
        "similarity": 1.0,
        "match_type": "exact",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_exact_09dd398f0b2b5675_d508eefb",
        "content_hash": "09dd398f0b2b5675",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py",
      "line": 7,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P1_FUNCTIONAL: lightweight_fingerprint",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py:7",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P1_FUNCTIONAL",
        "function_name": "lightweight_fingerprint",
        "class_name": null,
        "signature": "(model, challenges)",
        "risk_factors": [],
        "suggested_action": "Provide minimal, correct implementation",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def lightweight_fingerprint(model, challenges):\n    \"\"\"Functional stub - minimal implementation provided.\"\"\"\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\"Using stub implementation for {stub.function_name}\", UserWarning)\n    return None",
        "stable_id": "TC_phantom_stub_triage_fc77aa33e41eaf78_476c8fe2",
        "content_hash": "fc77aa33e41eaf78",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py",
      "line": 16,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P1_FUNCTIONAL: plot_det_curve",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py:16",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P1_FUNCTIONAL",
        "function_name": "plot_det_curve",
        "class_name": null,
        "signature": "(far_values, frr_values, title)",
        "risk_factors": [],
        "suggested_action": "Provide minimal, correct implementation",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def plot_det_curve(far_values, frr_values, title):\n    \"\"\"Functional stub - minimal implementation provided.\"\"\"\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\"Using stub implementation for {stub.function_name}\", UserWarning)\n    return None",
        "stable_id": "TC_phantom_stub_triage_219cf8168958ef5a_f97c007c",
        "content_hash": "219cf8168958ef5a",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py",
      "line": 17,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P1_FUNCTIONAL: VisionModel.get_features",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/models.py:17",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P1_FUNCTIONAL",
        "function_name": "get_features",
        "class_name": "VisionModel",
        "signature": "(self, x)",
        "risk_factors": [],
        "suggested_action": "Provide minimal, correct implementation",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def get_features(self, x):\n    \"\"\"Functional stub - minimal implementation provided.\"\"\"\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\"Using stub implementation for {stub.function_name}\", UserWarning)\n    return None",
        "stable_id": "TC_phantom_stub_triage_ddfcf6b7155cd4c4_a7860d2f",
        "content_hash": "ddfcf6b7155cd4c4",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py",
      "line": 3,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P1_FUNCTIONAL: render_sine_grating",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py:3",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P1_FUNCTIONAL",
        "function_name": "render_sine_grating",
        "class_name": null,
        "signature": "(H, W, freq, theta, phase, contrast)",
        "risk_factors": [],
        "suggested_action": "Provide minimal, correct implementation",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def render_sine_grating(H, W, freq, theta, phase, contrast):\n    \"\"\"Functional stub - minimal implementation provided.\"\"\"\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\"Using stub implementation for {stub.function_name}\", UserWarning)\n    return None",
        "stable_id": "TC_phantom_stub_triage_58d713167a0a8314_f7074bbe",
        "content_hash": "58d713167a0a8314",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py",
      "line": 8,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "phantom_stub_triage",
      "message": "P1_FUNCTIONAL: render_texture",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review phantom_stub_triage issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py:8",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "priority": "P1_FUNCTIONAL",
        "function_name": "render_texture",
        "class_name": null,
        "signature": "(H, W, octaves, scale)",
        "risk_factors": [],
        "suggested_action": "Provide minimal, correct implementation",
        "is_allowed": false,
        "is_blocked": false,
        "generated_implementation": "def render_texture(H, W, octaves, scale):\n    \"\"\"Functional stub - minimal implementation provided.\"\"\"\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\"Using stub implementation for {stub.function_name}\", UserWarning)\n    return None",
        "stable_id": "TC_phantom_stub_triage_69248685b8f5a1fc_46a2742a",
        "content_hash": "69248685b8f5a1fc",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/core/governance.py",
      "line": 67,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'verify_commitment' implies logic but has complexity 1 in verify_commitment",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/core/governance.py:67",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "verify_commitment",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'verify_commitment' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": true,
        "implies_logic": true,
        "called_by": [
          "ComprehensiveValidator.validate_kdf_governance"
        ],
        "stable_id": "TC_enhanced_placeholder_a9db8f57a8e9710a_a7a7d50c",
        "content_hash": "a9db8f57a8e9710a",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py",
      "line": 114,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'compute_output_distance' implies logic but has complexity 1 in LMVerifier.compute_output_distance",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py:114",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "compute_output_distance",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'compute_output_distance' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_c9cef5cad24dc2e5_dbeb8b03",
        "content_hash": "c9cef5cad24dc2e5",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py",
      "line": 284,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'verify_with_time_tolerance' implies logic but has complexity 1 in LMVerifier.verify_with_time_tolerance",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/lm/verifier.py:284",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "verify_with_time_tolerance",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'verify_with_time_tolerance' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_dbb76c4418757940_7f454301",
        "content_hash": "dbb76c4418757940",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py",
      "line": 368,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'verify_model_output' implies logic but has complexity 1 in FuzzyHashVerifier.verify_model_output",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/security/fuzzy_hash_verifier.py:368",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "verify_model_output",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'verify_model_output' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_97ab306a02818fa1_e0875d64",
        "content_hash": "97ab306a02818fa1",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py",
      "line": 70,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'calculate_hash' implies logic but has complexity 1 in TrainingEvent.calculate_hash",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:70",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "calculate_hash",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'calculate_hash' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_38430a10fbd9b179_7e2e5af4",
        "content_hash": "38430a10fbd9b179",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py",
      "line": 281,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'verify_progression_proof' implies logic but has complexity 1 in ZeroKnowledgeProof.verify_progression_proof",
      "severity": 3,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/security/training_provenance_auditor.py:281",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "verify_progression_proof",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'verify_progression_proof' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_5e8db5b242945cd4_b17faba8",
        "content_hash": "5e8db5b242945cd4",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 34,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_duplicate_function",
      "message": "Semantic duplicate: print_header similar to print_header in experimental_report_final.py (similarity: 0.88)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:47",
        "function_name": "print_header",
        "duplicate_name": "print_header",
        "similarity": 0.88,
        "match_type": "semantic",
        "stable_id": "TC_semantic_duplicate_function_1db115d9e5952fb2_b6516422",
        "content_hash": "1db115d9e5952fb2",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py",
      "line": 16,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_5e616561",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 16,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_7b48df27",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 20,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_2d5927d2",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 19,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_7035a79a",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/stress_test.py",
      "line": 11,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_6b8d59c9",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/validation_experiment.py",
      "line": 13,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_68d6d15b",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_attack.py",
      "line": 15,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_c9ddb10d",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_generate_reference.py",
      "line": 12,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_368e2b40",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_grid.py",
      "line": 19,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_067985a2",
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_plots.py",
      "line": 18,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_067985a2",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_82aab495",
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_verify.py",
      "line": 17,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "missing_symbol",
      "message": "Reference to undefined symbol '__file__'",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [],
      "evidence": {
        "context": "<module>",
        "node_type": "name",
        "stable_id": "TC_missing_symbol_b6b5203270481309_82aab495",
        "content_hash": "b6b5203270481309",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        },
        "similar_issues": [
          "TC_missing_symbol_b6b5203270481309_5e616561",
          "TC_missing_symbol_b6b5203270481309_7b48df27",
          "TC_missing_symbol_b6b5203270481309_2d5927d2",
          "TC_missing_symbol_b6b5203270481309_7035a79a",
          "TC_missing_symbol_b6b5203270481309_6b8d59c9",
          "TC_missing_symbol_b6b5203270481309_68d6d15b",
          "TC_missing_symbol_b6b5203270481309_c9ddb10d",
          "TC_missing_symbol_b6b5203270481309_368e2b40",
          "TC_missing_symbol_b6b5203270481309_ee0ad5fc",
          "TC_missing_symbol_b6b5203270481309_067985a2"
        ]
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/core/wrapper_detection.py",
      "line": 392,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "semantic_hv_duplicate",
      "message": "Semantic duplicate (HV): adaptive_adversary similar to wrapper_adversary in wrapper_detection.py (similarity: 0.87)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review semantic_hv_duplicate issue at /Users/rohanvinaik/PoT_Experiments/pot/core/wrapper_detection.py:392",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "duplicate_location": "/Users/rohanvinaik/PoT_Experiments/pot/core/wrapper_detection.py:352",
        "function_name": "adaptive_adversary",
        "duplicate_name": "wrapper_adversary",
        "similarity": 0.8741258741258742,
        "match_type": "semantic",
        "analyzer": "semantic_hv",
        "stable_id": "TC_semantic_hv_duplicate_2a20c9a0e3468641_8005dda3",
        "content_hash": "2a20c9a0e3468641",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py",
      "line": 160,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'validate_kdf_governance' implies logic but has complexity 1 in ComprehensiveValidator.validate_kdf_governance",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py:160",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "validate_kdf_governance",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'validate_kdf_governance' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_55ad623a9e91152c_ab09344f",
        "content_hash": "55ad623a9e91152c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py",
      "line": 219,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'validate_fuzzy_hashing' implies logic but has complexity 1 in ComprehensiveValidator.validate_fuzzy_hashing",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py:219",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "validate_fuzzy_hashing",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'validate_fuzzy_hashing' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_0aa5f965b43c8d39_d9bc5b76",
        "content_hash": "0aa5f965b43c8d39",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py",
      "line": 617,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function 'validate_challenge_generation' implies logic but has complexity 1 in ComprehensiveValidator.validate_challenge_generation",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/comprehensive_validation.py:617",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "validate_challenge_generation",
        "pattern_type": "low_complexity_logic",
        "description": "Function 'validate_challenge_generation' implies logic but has complexity 1",
        "complexity": 1,
        "is_called": false,
        "implies_logic": true,
        "stable_id": "TC_enhanced_placeholder_2da830fbef104f3a_7081d6b6",
        "content_hash": "2da830fbef104f3a",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py",
      "line": 7,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function contains only 'pass' in lightweight_fingerprint",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/eval/baselines.py:7",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "lightweight_fingerprint",
        "pattern_type": "pass_only",
        "description": "Function contains only 'pass'",
        "complexity": 1,
        "is_called": false,
        "implies_logic": false,
        "stable_id": "TC_enhanced_placeholder_5273833459541434_476c8fe2",
        "content_hash": "5273833459541434",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py",
      "line": 16,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function contains only 'pass' in plot_det_curve",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/eval/plots.py:16",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "plot_det_curve",
        "pattern_type": "pass_only",
        "description": "Function contains only 'pass'",
        "complexity": 1,
        "is_called": false,
        "implies_logic": false,
        "stable_id": "TC_enhanced_placeholder_c0ad7f51ab67418b_f97c007c",
        "content_hash": "c0ad7f51ab67418b",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/models.py",
      "line": 17,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function raises NotImplementedError in VisionModel.get_features",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/models.py:17",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "get_features",
        "pattern_type": "not_implemented",
        "description": "Function raises NotImplementedError",
        "complexity": 1,
        "is_called": false,
        "implies_logic": false,
        "stable_id": "TC_enhanced_placeholder_17e33b5825097d9c_a7860d2f",
        "content_hash": "17e33b5825097d9c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py",
      "line": 3,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function contains only 'pass' in render_sine_grating",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py:3",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "render_sine_grating",
        "pattern_type": "pass_only",
        "description": "Function contains only 'pass'",
        "complexity": 1,
        "is_called": false,
        "implies_logic": false,
        "stable_id": "TC_enhanced_placeholder_7a9370387b4e7480_f7074bbe",
        "content_hash": "7a9370387b4e7480",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py",
      "line": 8,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "enhanced_placeholder",
      "message": "Function contains only 'pass' in render_texture",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review enhanced_placeholder issue at /Users/rohanvinaik/PoT_Experiments/pot/vision/probes.py:8",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "function_name": "render_texture",
        "pattern_type": "pass_only",
        "description": "Function contains only 'pass'",
        "complexity": 1,
        "is_called": false,
        "implies_logic": false,
        "stable_id": "TC_enhanced_placeholder_78cd06428bd81426_46a2742a",
        "content_hash": "78cd06428bd81426",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 449,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:449",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "1. Perfect Discrimination: FAR=0.01, FRR=0.01 at appropriate thresholds",
          "2. Attack Resistance: 100% detection rate for all tested attacks",
          "3. Leakage Resilience: Secure even with 25% challenge compromise",
          "4. Query Efficiency: 56-78% reduction with sequential testing",
          "5. Probe Design: Texture probes 19% more effective than frequency"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_f019f272ffcead91_bf01151e",
        "content_hash": "f019f272ffcead91",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 60,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:60",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|-------------------|-----|-------------|---------------|---------------------|--------------|",
        "entropy": 0.3823806751537801,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_44875cfd1c1a180f_baf9562e",
        "content_hash": "44875cfd1c1a180f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 121,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:121",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|-------------|----------------|----------------|---------------|",
        "entropy": 0.39124356362925566,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_ff8c355ef384c9e4_d8ab98a0",
        "content_hash": "ff8c355ef384c9e4",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 177,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:177",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|----------------|-------------|---------------|---------------------|",
        "entropy": 0.37123232664087563,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_335a51b09711df14_5a982a7a",
        "content_hash": "335a51b09711df14",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 249,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:249",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------------------|---------|-------------|--------------|----------------|",
        "entropy": 0.39124356362925566,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_4f9c0c25ad3ced4c_2bba35bf",
        "content_hash": "4f9c0c25ad3ced4c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 315,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:315",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|---------------------|------------------|---------------|------------|",
        "entropy": 0.3674984948272914,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_b529fb2ce975abfb_77978baa",
        "content_hash": "b529fb2ce975abfb",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 365,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:365",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|---------------------|--------|--------|--------|---------|",
        "entropy": 0.4689955935892812,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_3ef21efe7dc41a74_e155c364",
        "content_hash": "3ef21efe7dc41a74",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 398,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:398",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|---------------------|-------------------|-----------|",
        "entropy": 0.3760198509692728,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_508df436716b0715_a4375530",
        "content_hash": "508df436716b0715",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 234,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:234",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "Both families work correctly"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_0257d0718867c078_87e7d1bb",
        "content_hash": "0257d0718867c078",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 300,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:300",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Both attacks fail to evade detection",
          "PoT protocol resistant to current attack methods"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_16475cfa9429a716_898cdde1",
        "content_hash": "16475cfa9429a716",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report.py",
      "line": 352,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report.py:352",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "Same confidence level maintained"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_7a2f7d8ce9ac7f63_18081bda",
        "content_hash": "7a2f7d8ce9ac7f63",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 85,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:85",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------------|------------|-----|---------------|--------------------|------------|",
        "entropy": 0.41041614171818885,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_afd8151d9669330c_ecab3bfe",
        "content_hash": "afd8151d9669330c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 198,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:198",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|-----------------|--------|--------|--------|----------|-------------------|",
        "entropy": 0.4394969869215134,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_44199935b9c90fb5_f385898a",
        "content_hash": "44199935b9c90fb5",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 241,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Lorem ipsum or placeholder text detected",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:241",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "  Test data:   - - - - - (dashed line)",
        "pattern": "test\\s+data",
        "filler_type": "lorem_ipsum",
        "stable_id": "TC_llm_filler_text_233f1640202230a0_1aa75944",
        "content_hash": "233f1640202230a0",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 276,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:276",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------------------|---------|---------|-----------|------------|------------|",
        "entropy": 0.42806962922930625,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_6fea8727b311d832_99cd2e41",
        "content_hash": "6fea8727b311d832",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 337,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:337",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------------------|---------------|---------------------|---------------------|",
        "entropy": 0.3313056130577884,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_848a29fc75b56f0b_cd905450",
        "content_hash": "848a29fc75b56f0b",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 343,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:343",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Fine-tuned (10%)",
          "Reject \u2717",
          "Significant change"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_b438377b44072739_79bc625e",
        "content_hash": "b438377b44072739",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 344,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: reverse_alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:344",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "reverse_alphabetical",
        "values": [
          "Wrapper Attack",
          "Reject \u2717",
          "Attack detected"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_95c292a79a420e6c_4fc70e9e",
        "content_hash": "95c292a79a420e6c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 387,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:387",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------------------|----------|------------|-------------|--------------|",
        "entropy": 0.4021791902022728,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_08724c9326c96f25_b72fcaaa",
        "content_hash": "08724c9326c96f25",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 390,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:390",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "None (baseline)",
          "Reference"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_cd1ae458b665981d_cddb016c",
        "content_hash": "cd1ae458b665981d",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 391,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:391",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "Whitespace",
          "Formatting"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_8361d643f435be4c_cd41e3b6",
        "content_hash": "8361d643f435be4c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 392,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:392",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Casing",
          "Normalization"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_bd3ee7b8f8bc2f07_0ef4ac26",
        "content_hash": "bd3ee7b8f8bc2f07",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 393,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:393",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Subword split",
          "Tokenization"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_37a8f3965bd59bd2_09fb1cd0",
        "content_hash": "37a8f3965bd59bd2",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 394,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: reverse_alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:394",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "reverse_alphabetical",
        "values": [
          "Synonym swap",
          "Semantic"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_6a68597cff96ea72_91978f52",
        "content_hash": "6a68597cff96ea72",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 395,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:395",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Paraphrase",
          "Structure"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_6f36023aa54d2f41_b3ceb11c",
        "content_hash": "6f36023aa54d2f41",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 175,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: reverse_alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:175",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "reverse_alphabetical",
        "values": [
          "SPRT achieves 2-3 query detection",
          "Fixed-batch uses 35 queries for fair baseline comparison",
          "Clear distinction maintained throughout results"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_07a0ca7c71891202_403f7f83",
        "content_hash": "07a0ca7c71891202",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_final.py",
      "line": 511,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_final.py:511",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Challenge IDs with salts",
          "Model checksums for verification",
          "SPRT likelihood traces included"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_0f349fd847b76191_6271f632",
        "content_hash": "0f349fd847b76191",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 627,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:627",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "1. SPRT: Now shows realistic ~35 queries (not 1) with proper likelihood traces",
          "2. Leakage: Corrected metrics - distance increases with attack success",
          "3. Probe families: Clarified T-stat (+20%), AUROC (+3%), queries (-5%)",
          "4. Large n: Added n\u2208{256,512} with 5 seeds and confidence intervals",
          "5. Baselines: Added IPGuard, DeepSigns, ModelDiff comparisons",
          "6. LM modality: Demonstrated tokenization/decoding drift robustness",
          "7. Calibration: Showed \u03c4 selection via held-out set with curves"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_f9c62f6266192fc2_929f649d",
        "content_hash": "f9c62f6266192fc2",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 76,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:76",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|---------------|-----|-------------------|--------------------|-----------------------|",
        "entropy": 0.3591016256485496,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_be82eb20427bc212_fbcd3ca5",
        "content_hash": "be82eb20427bc212",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 185,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:185",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|-------------|---------------|-------------|----------------------|-----|-----|",
        "entropy": 0.42806962922930625,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_8b258948c455a79f_c5099c12",
        "content_hash": "8b258948c455a79f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 274,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:274",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|----------------|-------------|-------|--------------|-----------------|",
        "entropy": 0.409855370318405,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_fede4576e10a59f1_5e658271",
        "content_hash": "fede4576e10a59f1",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 368,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:368",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|-------------------------|--------|--------|--------|---------|------------------|",
        "entropy": 0.41728069067083173,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_f51ee77f58bfcf7b_6280842f",
        "content_hash": "f51ee77f58bfcf7b",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 437,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:437",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|------------|--------------|-----------------|----------|-----------|------------------|",
        "entropy": 0.39741041036992475,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_3f489241dd175756_4c3ae965",
        "content_hash": "3f489241dd175756",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 547,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously low entropy in text (likely synthetic)",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:547",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "|--------|--------|--------|----------|-------------------|",
        "entropy": 0.4743454375622397,
        "filler_type": "low_entropy",
        "stable_id": "TC_llm_filler_text_458cba2b76f5228e_01c77142",
        "content_hash": "458cba2b76f5228e",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 166,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:166",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "Proper likelihood traces logged and verified"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_9fbddba11dc7c8c9_f9bbd683",
        "content_hash": "9fbddba11dc7c8c9",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 257,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:257",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "FAR/FRR properly computed from H\u2080/H\u2081 distributions"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_64700c146ee4b65f_63cee839",
        "content_hash": "64700c146ee4b65f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 354,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:354",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "All metrics consistently favor texture probes"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_1e1e7f39e3024367_492ff7d8",
        "content_hash": "1e1e7f39e3024367",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 421,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:421",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "Compared against IPGuard, DeepSigns, and ModelDiff",
          "Superior performance with fewer queries"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_72171363a130b706_528cc2f3",
        "content_hash": "72171363a130b706",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py",
      "line": 609,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: all_same_length",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_report_fixed.py:609",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "all_same_length",
        "values": [
          "Bernstein bounds reduce calibration error by 60%"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_91487ed1983c081c_cc8cc0c4",
        "content_hash": "91487ed1983c081c",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/experimental_results/validation_experiment.py",
      "line": 60,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/experimental_results/validation_experiment.py:60",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "alphabetical",
        "values": [
          "exact",
          "fuzzy",
          "statistical"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_8c43451bff5db38f_01b0cf7e",
        "content_hash": "8c43451bff5db38f",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/pot/security/proof_of_training.py",
      "line": 201,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_text",
      "message": "Suspiciously repetitive text pattern",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_text issue at /Users/rohanvinaik/PoT_Experiments/pot/security/proof_of_training.py:201",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "text_snippet": "Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo",
        "repetition_ratio": 1.0,
        "most_repeated": "buffalo",
        "filler_type": "repetitive",
        "stable_id": "TC_llm_filler_text_c38500ae95360dc1_faf6614c",
        "content_hash": "c38500ae95360dc1",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    },
    {
      "file": "/Users/rohanvinaik/PoT_Experiments/scripts/run_attack.py",
      "line": 22,
      "end_line": null,
      "column": null,
      "symbol": null,
      "kind": "llm_filler_sequence",
      "message": "Suspiciously uniform pattern: reverse_alphabetical",
      "severity": 2,
      "confidence": 1.0,
      "suggestions": [
        "Review llm_filler_sequence issue at /Users/rohanvinaik/PoT_Experiments/scripts/run_attack.py:22",
        "Consider refactoring to improve code quality",
        "Add tests to prevent regression"
      ],
      "evidence": {
        "pattern": "reverse_alphabetical",
        "values": [
          "wrapper",
          "targeted_finetune",
          "distillation"
        ],
        "filler_type": "uniform",
        "stable_id": "TC_llm_filler_sequence_0dd5481f7626d766_aee9bad3",
        "content_hash": "0dd5481f7626d766",
        "provenance": {
          "tracking_enabled": true,
          "git_commit": "ff67663a5152fad8948d1dbf6105ff3a540e5bf6",
          "git_branch": "main",
          "run_id": "2ae1d086659164c2",
          "is_regression": false
        }
      },
      "is_fixable": true
    }
  ]
}